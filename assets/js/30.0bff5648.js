(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{386:function(_,v,e){"use strict";e.r(v);var o=e(42),t=Object(o.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"可视化的javascript-七-promises-和-async-await"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可视化的javascript-七-promises-和-async-await"}},[_._v("#")]),_._v(" 可视化的JavaScript —— （七）Promises 和 Async/Await")]),_._v(" "),e("p",[_._v("【七】"),e("a",{attrs:{href:"https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke",target:"_blank",rel:"noopener noreferrer"}},[_._v("JavaScript Visualized: Promises & Async/Await"),e("OutboundLink")],1)]),_._v(" "),e("p",[_._v("是否曾经因为代码没有按照您预期的方式运行，而不得不对"),e("strong",[_._v("JS")]),_._v(" 代码进行处理 。函数似乎是在随机、不可预测的时间执行的，或者执行被延迟了。您可能正在使用 "),e("strong",[_._v("ES6")]),_._v(" 引入的一个很酷的新功能："),e("strong",[_._v("Promises")]),_._v("！")]),_._v(" "),e("p",[_._v("我多年前的好奇心得到了答复，我的不眠之夜再次让我有时间制作一些动画。是时候讨论 "),e("strong",[_._v("Promise")]),_._v(" 了：你"),e("strong",[_._v("为什么")]),_._v("要使用它们，它们"),e("strong",[_._v("如何")]),_._v("在“幕后”工作，以及我们如何以最"),e("strong",[_._v("现代的")]),_._v("方式实现它们？")]),_._v(" "),e("table",[e("thead",[e("tr",[e("th",[_._v("全文分为四个章节：")])])]),_._v(" "),e("tbody",[e("tr",[e("td",[_._v("🥳 简介")])]),_._v(" "),e("tr",[e("td",[_._v("⚡️ Promise 语法")])]),_._v(" "),e("tr",[e("td",[_._v("♻️ 事件循环：微任务和（宏）任务")])]),_._v(" "),e("tr",[e("td",[_._v("🚀 异步/等待")])])])]),_._v(" "),e("h3",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[_._v("#")]),_._v(" 介绍")]),_._v(" "),e("p",[_._v("在编写 JavaScript 时，我们经常要处理依赖其他任务的任务！假设我们想要获取一个图像，压缩它，应用过滤器，然后保存它📸")]),_._v(" "),e("p",[_._v("我们需要做的第一件事就是"),e("em",[_._v("获取")]),_._v("我们想要编辑的图像。一个"),e("code",[_._v("getImage")]),_._v("函数可以解决这个问题！只有成功加载该图像后，我们才能将该值传递给"),e("code",[_._v("resizeImage")]),_._v("函数。成功调整图像大小后，我们希望在"),e("code",[_._v("applyFilter")]),_._v("函数中对图像应用过滤器。压缩图像并添加过滤器后，我们要保存图像并让用户知道一切正常！🥳")]),_._v(" "),e("p",[_._v("最后，我们会得到这样的结果：")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s---Kv6sJn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ixceqsql5hpdq8txx43s.png",alt:"img"}})]),_._v(" "),e("p",[_._v("嗯……注意到这里有什么吗？虽然它……"),e("em",[_._v("很好")]),_._v("，但不是很好。我们最终得到了许多依赖于前一个回调函数的嵌套回调函数。这通常被称为"),e("a",{attrs:{href:"http://callbackhell.com/",target:"_blank",rel:"noopener noreferrer"}},[e("em",[_._v("回调地狱")]),e("OutboundLink")],1),_._v("，因为我们最终会得到大量嵌套的回调函数，这使得代码很难阅读！")]),_._v(" "),e("p",[_._v("幸运的是，我们现在有了一个叫做**promises **的东西来帮助我们！让我们来看看 "),e("strong",[_._v("Promise")]),_._v(" 是什么，以及它们如何在这样的情况下帮助我们！😃")]),_._v(" "),e("h3",{attrs:{id:"promise-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-语法"}},[_._v("#")]),_._v(" Promise 语法")]),_._v(" "),e("p",[_._v("ES6 引入了"),e("strong",[_._v("Promise")]),_._v("。在许多教程中，您将阅读以下内容：")]),_._v(" "),e("blockquote",[e("p",[_._v("“Promise是一个值的占位符，可以在未来的某个时间解决或拒绝”")])]),_._v(" "),e("p",[_._v("是的...这个解释从来没有让我更清楚。事实上，它只是让我觉得 "),e("strong",[_._v("Promise")]),_._v(" 是一种奇怪的、模糊的、不可预测的魔法。因此，让我们看看都有哪些"),e("strong",[_._v("Promise")]),_._v(" 。")]),_._v(" "),e("p",[_._v("我们可以创建一个"),e("strong",[_._v("Promise")]),_._v(" ，使用一个"),e("code",[_._v("Promise")]),_._v("接收回调的构造函数。好的，让我们试试吧！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--phTVdCKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/79zi452hphe7ecylhozy.gif",alt:"替换文字"}})]),_._v(" "),e("p",[_._v("等等，刚刚返回了什么？")]),_._v(" "),e("p",[_._v("一个"),e("code",[_._v("Promise")]),_._v("是一个包含"),e("strong",[_._v("状态")]),_._v("( "),e("code",[_._v("[[PromiseStatus]]")]),_._v(") 和"),e("strong",[_._v("值")]),_._v("( "),e("code",[_._v("[[PromiseValue]]")]),_._v(") 的对象。在上面的例子中，你可以看到，值"),e("code",[_._v("[[PromiseStatus]]")]),_._v("的值是"),e("code",[_._v('"pending"')]),_._v("，"),e("code",[_._v("[[PromiseValue]]")]),_._v("的值是"),e("code",[_._v("undefined")]),_._v("。")]),_._v(" "),e("p",[_._v("别担心 - 你永远不必与这个对象交互，你甚至不能访问"),e("code",[_._v("[[PromiseStatus]]")]),_._v("和"),e("code",[_._v("[[PromiseValue]]")]),_._v("属性！但是，在使用 "),e("strong",[_._v("Promise")]),_._v(" 时，这些属性的值很重要。")]),_._v(" "),e("p",[e("code",[_._v("PromiseStatus")]),_._v("的值，"),e("strong",[_._v("状态")]),_._v("，可以是三个值之一：")]),_._v(" "),e("ul",[e("li",[_._v("✅ "),e("code",[_._v("fulfilled")]),_._v("：承诺已"),e("code",[_._v("resolved")]),_._v("。一切顺利，"),e("strong",[_._v("Promise")]),_._v(" 内没有出现错误🥳")]),_._v(" "),e("li",[_._v("❌ "),e("code",[_._v("rejected")]),_._v("："),e("strong",[_._v("Promise")]),_._v(" 已"),e("code",[_._v("rejected")]),_._v("。出事了..")]),_._v(" "),e("li",[_._v("⏳ "),e("code",[_._v("pending")]),_._v("："),e("strong",[_._v("promise")]),_._v(" 既没有解决也没有拒绝（还），"),e("strong",[_._v("promise")]),_._v(" 还是"),e("code",[_._v("pending")]),_._v(".")])]),_._v(" "),e("p",[_._v("这一切听起来都很棒，但是什么时候 "),e("strong",[_._v("promise")]),_._v(" 状态是"),e("code",[_._v('"pending"')]),_._v("，"),e("code",[_._v('"fulfilled"')]),_._v("或"),e("code",[_._v('"rejected"')]),_._v("？为什么这种状态很重要？")]),_._v(" "),e("p",[_._v("在上面的例子中，我们只是将简单的回调函数"),e("code",[_._v("() => {}")]),_._v("传递给"),e("code",[_._v("Promise")]),_._v("构造函数。然而，这个回调函数实际上接收两个参数。第一个参数的值，通常称为"),e("code",[_._v("resolve")]),_._v(" 或者 "),e("code",[_._v("res")]),_._v("，是当 "),e("code",[_._v("Promise")]),_._v(" "),e("strong",[_._v("resolve")]),_._v("时要调用的方法。第二个参数的值，通常称为"),e("code",[_._v("reject")]),_._v("或者 "),e("code",[_._v("rej")]),_._v("，是当 "),e("code",[_._v("Promise")]),_._v(" "),e("strong",[_._v("reject")]),_._v("时要调用的值方法，此时出现了问题。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--9A_mOYMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/duen4peq0bdr55cka5ya.png",alt:"img"}})]),_._v(" "),e("p",[_._v("让我们试着看看当我们调用"),e("code",[_._v("resolve")]),_._v("或"),e("code",[_._v("reject")]),_._v("方法时会被记录下来！在我的示例中，我调用了"),e("code",[_._v("resolve")]),_._v("方法"),e("code",[_._v("res")]),_._v("和"),e("code",[_._v("reject")]),_._v("方法 "),e("code",[_._v("rej")]),_._v("。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--qKIq-sYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z0b9v0h7aiq073l5tl2l.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("我们终于知道如何摆脱"),e("code",[_._v('"pending"')]),_._v("状态和"),e("code",[_._v("undefined")]),_._v("值了！如果我们调用了"),e("code",[_._v("resolve")]),_._v("方法，"),e("strong",[_._v("promise")]),_._v("的"),e("strong",[_._v("状态")]),_._v("是"),e("code",[_._v('"fulfilled"')]),_._v("，如果我们调用了"),e("code",[_._v("rejecte")]),_._v("方法，"),e("strong",[_._v("promise")]),_._v("的状态是"),e("code",[_._v('"rejected')]),_._v('"。')]),_._v(" "),e("p",[e("strong",[_._v("promise")]),_._v("的值，"),e("code",[_._v("[[PromiseValue]]")]),_._v("，是我们作为参数传递给"),e("code",[_._v("resolved")]),_._v("或"),e("code",[_._v("rejected")]),_._v("方法的。")]),_._v(" "),e("blockquote",[e("p",[_._v("有趣的事实，我让 Jake Archibald 校对了这篇文章，他实际上指出 Chrome 中存在一个错误，当前显示状态为"),e("code",[_._v('"resolved"')]),_._v("而不是"),e("code",[_._v('"fulfilled"')]),_._v("。感谢"),e("a",{attrs:{href:"https://twitter.com/mathias",target:"_blank",rel:"noopener noreferrer"}},[_._v("Mathias Bynens，"),e("OutboundLink")],1),_._v("它现在已在 Canary 中修复！🥳🕺🏼")])]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--kZ3BKUHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EVJqgKLUwAEocsG.png",alt:"unknown tweet media content"}})]),_._v(" "),e("p",[_._v("好的，现在我们对如何控制那个模糊的"),e("code",[_._v("Promise")]),_._v("对象有了更好的了解。但是它有什么用呢？")]),_._v(" "),e("p",[_._v("在介绍部分中，我展示了一个示例，其中我们获取图像、压缩它、应用文件管理器并保存它！最终，这最终成为一个嵌套的回调混乱。")]),_._v(" "),e("p",[_._v("幸运的是，"),e("strong",[_._v("Promise")]),_._v(" 可以帮助我们解决这个问题！首先，让我们重写整个代码块，让每个函数返回一个"),e("code",[_._v("Promise")]),_._v("。")]),_._v(" "),e("p",[_._v("如果图像已加载并且一切正常，我们用加载的图像解决"),e("strong",[_._v("Promise")]),_._v(" ！否则，如果加载文件时某处出现错误，我们"),e("strong",[_._v("拒绝")]),_._v("发生错误的"),e("strong",[_._v("Promise")]),_._v(" 。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--r9xngcNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iebp0rzfnfqsrmmjplme.png",alt:"img"}})]),_._v(" "),e("p",[_._v("让我们看看当我们在终端中运行它时会发生什么！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--uERkfSWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wsu5nn26dp4elcwh764m.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("正如我们预期的那样，一个带有解析数据值的"),e("strong",[_._v("Promise")]),_._v(" 被返回。")]),_._v(" "),e("p",[_._v("但是……现在怎么办？我们不关心整个 "),e("strong",[_._v("Promise")]),_._v(" 对象，我们只关心数据的值！幸运的是，有一些内置方法可以获取 "),e("strong",[_._v("promise")]),_._v(" 的值。对于 promise，我们可以附加 3 个方法：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v(".then()")]),_._v("：在"),e("strong",[_._v("promise")]),_._v(" 解决后被调用。")]),_._v(" "),e("li",[e("code",[_._v(".catch()")]),_._v("：在"),e("strong",[_._v("promise")]),_._v(" 被拒绝*被调用。")]),_._v(" "),e("li",[e("code",[_._v(".finally()")]),_._v("："),e("em",[_._v("总是")]),_._v("被调用，无论"),e("strong",[_._v("promise")]),_._v(" 已解决还是被拒绝。")])]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--19tIvFJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mu1aqqnyfjsfon5hwrtw.png",alt:"img"}})]),_._v(" "),e("p",[_._v("该"),e("code",[_._v(".then")]),_._v("方法接收传递该"),e("code",[_._v("resolve")]),_._v("方法的值。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--DZld0c-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/11vxhn9cun7stpjbdi80.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("该"),e("code",[_._v(".catch")]),_._v("方法接收传递"),e("code",[_._v("rejected")]),_._v("方法的值")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--e9SZHcPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v5y24jz4u89flazvdyn4.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("最后，我们有了由 "),e("strong",[_._v("Promise")]),_._v(" 解析的值，而没有整个 "),e("strong",[_._v("Promise")]),_._v(" 对象！我们现在可以用这个值做任何我们想做的事情。")]),_._v(" "),e("p",[_._v("当您知道"),e("strong",[_._v("Promise")]),_._v(" 将始终解决或始终拒绝时，您可以编写"),e("code",[_._v("Promise.resolve")]),_._v("或"),e("code",[_._v("Promise.reject")]),_._v("，使用您想要拒绝或解决"),e("strong",[_._v("Promise")]),_._v(" 的值！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--61Gva3Ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90hxwjfadzslvdbkr4l8.png",alt:"Alt Text"}})]),_._v(" "),e("p",[_._v("你会经常在下面的例子中看到这种语法😄")]),_._v(" "),e("p",[_._v("在"),e("code",[_._v("getImage")]),_._v("示例中，我们最终不得不嵌套多个回调以运行它们。幸运的是，"),e("code",[_._v(".then")]),_._v("处理程序可以帮助我们解决这个问题！🥳")]),_._v(" "),e("p",[e("code",[_._v(".then")]),_._v("本身的结果是一个"),e("strong",[_._v("Promise")]),_._v(" 值。这意味着我们可以根据需要链接任意数量的"),e("code",[_._v(".then")]),_._v("：前一个"),e("code",[_._v("then")]),_._v("回调的结果将作为参数传递给下一个"),e("code",[_._v("then")]),_._v("回调！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--X8h-NDc2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i6busbetmoya9vny2eku.png",alt:"img"}})]),_._v(" "),e("p",[_._v("在"),e("code",[_._v("getImage")]),_._v("示例的情况下，我们可以链接多个"),e("code",[_._v("then")]),_._v("回调，以便将处理后的图像传递给下一个函数！我们得到了一个干净的"),e("code",[_._v("then")]),_._v("链，而不是以许多嵌套的回调结束。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--e1nVrqe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u9l3lxwxlxgv2edv79xh.png",alt:"img"}})]),_._v(" "),e("p",[_._v("这种语法看起来比嵌套回调更好。")]),_._v(" "),e("h3",{attrs:{id:"微任务和-宏-任务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微任务和-宏-任务"}},[_._v("#")]),_._v(" 微任务和（宏）任务")]),_._v(" "),e("p",[_._v("现在我们对如何创建"),e("strong",[_._v("Promise")]),_._v(" 以及如何从"),e("strong",[_._v("Promise")]),_._v(" 中提取值有了更好的了解。让我们向脚本添加更多代码，然后再次运行它：")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--uNG7sXon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ey4ubnv5yjgi6hbh97xq.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("等等，我们看发生了什么？")]),_._v(" "),e("p",[_._v("首先，"),e("code",[_._v("Start!")]),_._v("登录。我们可以看到在第一行记录："),e("code",[_._v("console.log('Start!')")]),_._v("！但是，记录的第二个值是"),e("code",[_._v("End!")]),_._v("，而"),e("em",[_._v("不是")]),_._v("已解决的"),e("strong",[_._v("Promise")]),_._v(" 的值！只有在"),e("code",[_._v("End!")]),_._v("被记录之后，"),e("strong",[_._v("Promise")]),_._v(" 的值才会被记录。这里发生了什么？")]),_._v(" "),e("p",[_._v("我们终于看到了 "),e("strong",[_._v("Promise")]),_._v(" 的真正力量！🚀 虽然 JavaScript 是单线程的，但我们可以使用"),e("code",[_._v("Promise")]),_._v("添加异步行为。")]),_._v(" "),e("p",[_._v("我们以前没见过吗？🤔 在"),e("a",{attrs:{href:"https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif",target:"_blank",rel:"noopener noreferrer"}},[_._v("JavaScript 事件循环中"),e("OutboundLink")],1),_._v("，我们不能也使用浏览器原生的方法"),e("code",[_._v("setTimeout")]),_._v("来创建某种异步行为吗？")]),_._v(" "),e("p",[_._v("是的！然而，在事件循环中，实际上有两种类型的队列：（"),e("strong",[_._v("宏）任务队列")]),_._v("（或简称为"),e("strong",[_._v("任务队列")]),_._v("）和 "),e("strong",[_._v("微任务队列")]),_._v("。"),e("strong",[_._v("（宏）任务队列")]),_._v("  用于**（宏）任务**，"),e("strong",[_._v("微任务")]),_._v("队列 用于 "),e("strong",[_._v("微任务")]),_._v("。")]),_._v(" "),e("p",[_._v("那么什么是**（宏）任务**，什么是"),e("strong",[_._v("微")]),_._v("任务？虽然有一些文章比我在这里介绍的要多，但最常见的如下表所示！")]),_._v(" "),e("table",[e("thead",[e("tr",[e("th",[_._v("/")]),_._v(" "),e("th",[_._v("举例")])])]),_._v(" "),e("tbody",[e("tr",[e("td",[_._v("（宏）任务")]),_._v(" "),e("td",[e("code",[_._v("setTimeout")]),_._v(", "),e("code",[_._v("setInterval")]),_._v(","),e("code",[_._v("setImmediate")])])]),_._v(" "),e("tr",[e("td",[_._v("微任务")]),_._v(" "),e("td",[e("code",[_._v("process.nextTick")]),_._v(", "),e("code",[_._v("Promise callback")]),_._v(","),e("code",[_._v("queueMicrotask")])])])])]),_._v(" "),e("p",[_._v("我们在微任务列表中看到"),e("code",[_._v("Promise")]),_._v("了！😃 当 一个"),e("code",[_._v("Promise")]),_._v("解析并调用它的"),e("code",[_._v("then()")]),_._v(", "),e("code",[_._v("catch()")]),_._v("或 "),e("code",[_._v("finally()")]),_._v(" 方法时，该方法中的回调会被添加到"),e("strong",[_._v("微任务队列中")]),_._v("！这意味着"),e("code",[_._v("then()")]),_._v(", "),e("code",[_._v("catch()")]),_._v("或"),e("code",[_._v("finally()")]),_._v("方法中的回调不会立即执行，实质上是向我们的 JavaScript 代码添加了一些异步行为！")]),_._v(" "),e("p",[_._v("所以，什么时候"),e("code",[_._v("then()")]),_._v("，"),e("code",[_._v("catch()")]),_._v("或者"),e("code",[_._v("finally()")]),_._v("回调执行？事件循环为任务赋予不同的优先级：")]),_._v(" "),e("ol",[e("li",[_._v("当前在"),e("strong",[_._v("调用堆栈")]),_._v("中的所有函数都被执行。当它们返回一个值时，它们会从堆栈中弹出。")]),_._v(" "),e("li",[_._v("当调用栈为空时，"),e("em",[_._v("所有")]),_._v("排队的"),e("strong",[_._v("微任务")]),_._v("都被一个一个的弹出到调用栈中，并被执行！（微任务本身也可以返回新的微任务，有效地创建了一个无限的微任务循环😬）")]),_._v(" "),e("li",[_._v("如果调用堆栈和微任务队列都为空，则事件循环检查（宏）任务队列中是否还有任务。如果有，任务会被弹出到调用堆栈上，执行，然后弹出！")])]),_._v(" "),e("p",[_._v("让我们看一个简单的例子，简单地使用：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("Task1")]),_._v("：立即添加到调用堆栈的函数，例如通过在我们的代码中立即调用它。")]),_._v(" "),e("li",[e("code",[_._v("Task2")]),_._v(", "),e("code",[_._v("Task3")]),_._v(", "),e("code",[_._v("Task4")]),_._v(": 微任务，例如"),e("code",[_._v("Promise then")]),_._v("回调，或添加了"),e("code",[_._v("queueMicrotask")]),_._v(".")]),_._v(" "),e("li",[e("code",[_._v("Task5")]),_._v(", "),e("code",[_._v("Task6")]),_._v(": 一个（宏）任务，例如一个"),e("code",[_._v("setTimeout")]),_._v("或"),e("code",[_._v("setImmediate")]),_._v("回调")])]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--05Fi8vBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/42eatw03fcha0e1qcrf0.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("首先，"),e("code",[_._v("Task1")]),_._v("返回一个值并从调用堆栈中弹出。然后，引擎检查在微任务队列中排队的任务。一旦所有任务都被放入调用堆栈并最终弹出，引擎就会检查（宏）任务队列中的任务，这些任务被弹出到调用堆栈中，并在它们返回值时弹出。")]),_._v(" "),e("p",[_._v("让我们用一些真正的代码来使用它！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--fnbqqf1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g61wwyi8wchk2hpzeq4u.png",alt:"img"}})]),_._v(" "),e("p",[_._v("在这段代码中，我们有宏任务"),e("code",[_._v("setTimeout")]),_._v("和微任务承诺"),e("code",[_._v("then()")]),_._v("回调。一旦引擎到达"),e("code",[_._v("setTimeout")]),_._v("功能。让我们一步一步地运行这段代码，看看记录了什么！")]),_._v(" "),e("blockquote",[e("p",[_._v("快速参考 - 在以下示例中，我将展示像"),e("code",[_._v("console.log")]),_._v(","),e("code",[_._v("setTimeout")]),_._v("和"),e("code",[_._v("Promise.resolve")]),_._v("被添加到调用堆栈中的方法。它们是内部方法，实际上不会出现在堆栈跟踪中 - 所以如果您正在使用调试器并且在任何地方都看不到它们，请不要担心！它只是为了解释这个概念更容易而无需添加一堆样板代码🙂")])]),_._v(" "),e("p",[_._v("在第一行，引擎遇到"),e("code",[_._v("console.log()")]),_._v("方法。它被添加到调用堆栈中，之后它将值记录"),e("code",[_._v("Start!")]),_._v("到控制台。该方法从调用堆栈中弹出，引擎继续。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s---Bt6DKsn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6cbjuexvy6z9ltk0bi18.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("引擎遇到该"),e("code",[_._v("setTimeout")]),_._v("方法，该方法被弹出到调用堆栈中。该"),e("code",[_._v("setTimeout")]),_._v("方法是浏览器本机的：它的回调函数 ( "),e("code",[_._v("() => console.log('In timeout')")]),_._v(") 将被添加到 Web API，直到计时器完成。尽管我们"),e("code",[_._v("0")]),_._v("为计时器提供了值，但回调仍然首先被推送到 Web API，然后它被添加到**（宏）任务队列中**："),e("code",[_._v("setTimeout")]),_._v("是一个宏任务！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--6NSYq-nO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yqoemb6f32lvovge8yrp.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("引擎遇到"),e("code",[_._v("Promise.resolve()")]),_._v("方法。该"),e("code",[_._v("Promise.resolve()")]),_._v("方法被添加到调用堆栈中，之后使用 value 解析"),e("code",[_._v("Promise!")]),_._v("。它的"),e("code",[_._v("then")]),_._v("回调函数被添加到"),e("strong",[_._v("微任务队列中")]),_._v("。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--us8FF30N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6wxjxduh62fqt531e2rc.gif",alt:"img"}})]),_._v(" "),e("p",[_._v("引擎遇到"),e("code",[_._v("console.log()")]),_._v("方法。它会立即添加到调用堆栈中，然后将值记录"),e("code",[_._v("End!")]),_._v("到控制台，从调用堆栈中弹出，然后引擎继续运行。")]),_._v(" "),e("p",[_._v("引擎现在看到调用堆栈是空的。由于调用栈是空的，它会检查微任务"),e("strong",[_._v("队列中")]),_._v("是否有排队的任务！是的，"),e("code",[_._v("Promise then")]),_._v("回调正在等待轮到它！它被弹出到调用堆栈中，之后它会记录"),e("code",[_._v("Promise")]),_._v("的解析值："),e("code",[_._v("Promise")]),_._v("在这种情况下是字符串。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--5iH5BNWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lczn4fca41is4vpicr6w.gif",alt:""}})]),_._v(" "),e("p",[_._v("引擎看到调用堆栈是空的，因此它将再次检查微任务队列以查看任务是否已排队。不，微任务队列全是空的。")]),_._v(" "),e("p",[_._v("是时候检查**（宏）任务队列了**："),e("code",[_._v("setTimeout")]),_._v("回调仍在那里等待！该"),e("code",[_._v("setTimeout")]),_._v("回调被弹出到调用堆栈。回调函数返回"),e("code",[_._v("console.log")]),_._v("记录字符串的方法"),e("code",[_._v('"In timeout!"')]),_._v("。该"),e("code",[_._v("setTimeout")]),_._v("回调弹出调用堆栈。")]),_._v(" "),e("p",[_._v("最后，一切都完成了！🥳 再来看我们之前看到的输出便不是那么出人意料了。")]),_._v(" "),e("h3",{attrs:{id:"异步等待"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步等待"}},[_._v("#")]),_._v(" 异步等待")]),_._v(" "),e("p",[_._v("ES7 引入了一种在 "),e("strong",[_._v("JavaScript")]),_._v(" 中添加异步行为的新方法，并使得使用 "),e("strong",[_._v("Promise")]),_._v(" 更容易！通过引入"),e("code",[_._v("async")]),_._v("和"),e("code",[_._v("await")]),_._v("关键字，我们可以创建隐式返回"),e("strong",[_._v("Promise")]),_._v(" 的"),e("strong",[_._v("异步")]),_._v("函数。但是..我们怎么能做到这一点？😮")]),_._v(" "),e("p",[_._v("此前，我们看到，我们可以明确地创建使用"),e("code",[_._v("Promise")]),_._v("的对象，无论是通过输入"),e("code",[_._v("new Promise(() => {})")]),_._v("，"),e("code",[_._v("Promise.resolve")]),_._v("或"),e("code",[_._v("Promise.reject")]),_._v("。")]),_._v(" "),e("p",[_._v("我们现在可以创建"),e("em",[_._v("隐式")]),_._v("返回对象"),e("code",[_._v("Promise")]),_._v("的异步函数，而不是显式使用对象！这意味着我们不再需要自己编写任何"),e("code",[_._v("Promise")]),_._v("对象。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--5ED_HyNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/72lqrcvy9lc8ehbpitd0.png",alt:"img"}})]),_._v(" "),e("p",[_._v("尽管"),e("strong",[_._v("async")]),_._v("函数隐式返回 "),e("strong",[_._v("promise")]),_._v(" 的事实非常棒，但"),e("code",[_._v("async")]),_._v("使用"),e("code",[_._v("await")]),_._v("关键字时可以看到函数的真正威力！使用"),e("code",[_._v("await")]),_._v("关键字，我们可以在等待ed 值返回已解决的承诺时"),e("em",[_._v("暂停")]),_._v("异步函数"),e("code",[_._v("await")]),_._v("。如果我们想获得这个已解析的 "),e("strong",[_._v("promise")]),_._v(" 的值，就像我们之前对"),e("code",[_._v("then()")]),_._v("回调所做的那样，我们可以将变量分配给"),e("code",[_._v("await")]),_._v("的 "),e("strong",[_._v("promise")]),_._v(" 值！")]),_._v(" "),e("p",[_._v("那么，我们可以"),e("em",[_._v("挂起")]),_._v("一个异步函数吗？好吧，很好，但是……这到底是什么意思？")]),_._v(" "),e("p",[_._v("让我们看看当我们运行以下代码块时会发生什么：")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--aOWmZxnV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e5duygomitj9o455107a.gif",alt:"替换文字"}})]),_._v(" "),e("p",[_._v("这里发生了什么？")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--bfscMU3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d27d7xxiekczftjyic4b.gif",alt:"替换文字"}})]),_._v(" "),e("p",[_._v("首先，引擎遇到一个"),e("code",[_._v("console.log")]),_._v(". 它被弹出到调用堆栈中，然后"),e("code",[_._v("Before function!")]),_._v("被记录。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--wN7yFTnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9wqej2269vmntfcuxs9t.gif",alt:"替换文字"}})]),_._v(" "),e("p",[_._v("然后，我们调用 async 函数"),e("code",[_._v("myFunc()")]),_._v("，然后"),e("code",[_._v("myFunc")]),_._v("运行函数体。在函数体的第一行，我们调用另一个"),e("code",[_._v("console.log")]),_._v("，这次是记录字符串 "),e("code",[_._v("In function!")]),_._v("。"),e("code",[_._v("console.log")]),_._v("将被添加到调用堆栈，记录该值，并得到弹出。")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--lX9JfreE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lch6lutxnl88j0durpyh.gif",alt:"Alt Text"}})]),_._v(" "),e("p",[_._v("函数体继续执行，让我们进入第二行。最后，我们看到一个"),e("code",[_._v("await")]),_._v("关键字！🎉")]),_._v(" "),e("p",[_._v("发生的第一件事是等待的值被执行："),e("code",[_._v("one")]),_._v("在这种情况下是函数。它被弹出到调用堆栈上，并最终返回一个已解决的"),e("strong",[_._v("promise")]),_._v(" 。一旦"),e("strong",[_._v("promise")]),_._v(" 解决并返回一个值"),e("code",[_._v("one")]),_._v("，引擎就会遇到"),e("code",[_._v("await")]),_._v("关键字。")]),_._v(" "),e("p",[_._v("遇到"),e("code",[_._v("await")]),_._v("关键字时，"),e("code",[_._v("async")]),_._v("函数会"),e("em",[_._v("暂停")]),_._v("。✋🏼 函数体的执行"),e("strong",[_._v("被暂停")]),_._v("，其余的异步函数在"),e("em",[_._v("微")]),_._v("任务中运行，而不是在常规任务中运行！")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--UC78HoCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/b6l3psgewvtrtmrr60tg.gif",alt:"替换文字"}})]),_._v(" "),e("p",[_._v("现在异步函数"),e("code",[_._v("myFunc")]),_._v("在遇到"),e("code",[_._v("await")]),_._v("关键字时被挂起，引擎跳出异步函数并继续在调用异步函数的执行上下文中执行代码：在这种情况下为"),e("strong",[_._v("全局执行上下文")]),_._v("！🏃🏽‍♀️")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://res.cloudinary.com/practicaldev/image/fetch/s--V8u36kEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hlhrtuspjyrstifubdhs.gif",alt:"替换文字"}})]),_._v(" "),e("p",[_._v("最后，在全局执行上下文中没有更多的任务要运行了！事件循环检查是否有还有微任务排队：确实有！"),e("code",[_._v("async myFunc")]),_._v("函数"),e("code",[_._v("one")]),_._v("解析后的值在排队。"),e("code",[_._v("myFunc")]),_._v("被弹回调用堆栈，并在之前停止的地方继续运行。")]),_._v(" "),e("p",[_._v("变量"),e("code",[_._v("res")]),_._v("最终得到了它的值，即"),e("code",[_._v("one")]),_._v("返回的已解析"),e("strong",[_._v("promise")]),_._v("的值！在这种情况下，"),e("code",[_._v("console.log")]),_._v("记录"),e("code",[_._v("res")]),_._v("的字符串值"),e("code",[_._v("One!")]),_._v("。"),e("code",[_._v("One!")]),_._v("记录到控制台后并从调用堆栈中弹出！😊")]),_._v(" "),e("p",[_._v("最后，一切都完成了！您是否注意到"),e("code",[_._v("async")]),_._v("函数与 "),e("strong",[_._v("promise")]),_._v("的 "),e("code",[_._v("then")]),_._v("有何不同？该"),e("code",[_._v("await")]),_._v("关键字"),e("em",[_._v("暂停")]),_._v("的"),e("code",[_._v("async")]),_._v("功能，而"),e("strong",[_._v("promise")]),_._v("会一直存在于我们已经使用过的"),e("code",[_._v("then")]),_._v("来准备执行！")]),_._v(" "),e("p",[_._v("【完】")])])}),[],!1,null,null,null);v.default=t.exports}}]);